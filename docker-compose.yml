version: '3'

services:
  dbservice:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 --password=$$MYSQL_PASSWORD
      timeout: 20s
      retries: 10
    ports:
      - 3306:3306
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - bootapp

  redis:
    container_name: redis
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - redis:/data
    networks:
      - bootapp

  es8:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: es8
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - es8_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - bootapp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 24

  appservice:
    build: .
    depends_on:
      redis:
        condition: service_healthy
      dbservice:
        condition: service_healthy
      es8:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://dbservice:3306/Shop?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: DEBUG
      LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL_BASICBINDER: TRACE
      SPRING_JPA_GENERATE_DDL: "true"
      SPRING_DATA_ELASTICSEARCH_CLUSTER_NODES: es8:9200
      SPRING_DATA_ELASTICSEARCH_CLUSTER_NAME: my-elasticsearch-cluster
      SPRING_DATA_ELASTICSEARCH_REPOSITORIES_INDEX_CREATION_STRATEGY: create
      SPRING_DATA_ELASTICSEARCH_REPOSITORIES_INDEX_NAME: product_index
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: ${MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: true
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
      RAZORPAY_API_KEY: ${RAZORPAY_API_KEY}
      RAZORPAY_API_SECRET: ${RAZORPAY_API_SECRET}
    links:
      - redis
    volumes:
      - app_data:/path/to/app_data
    ports:
      - 8080:8080
    networks:
      - bootapp

  frontend:
    container_name: frontend
    build: ./Frontend
    depends_on:
      - appservice
    ports:
      - 5173:5173
    stdin_open: true
    environment:
      CHOKIDAR_USEPOLLING: "true"
    command: npm run dev
    networks:
      - bootapp
    volumes:
      - './:/app'
      - '/app/node_modules'

networks:
  bootapp:
    driver: bridge

volumes:
  db_data:
  app_data:
  es8_data:
  redis:
